# Generated by Django 5.0.2 on 2024-06-13 10:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_bank', models.CharField(blank=True, max_length=200, null=True)),
                ('com_acct_name', models.CharField(blank=True, max_length=200, null=True)),
                ('com_acct_num', models.PositiveIntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(default='', max_length=10)),
                ('passport_photo', models.ImageField(blank=True, null=True, upload_to='user_passport')),
                ('marital_status', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email_address', models.EmailField(max_length=254)),
                ('user_name', models.CharField(blank=True, max_length=400, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=400, null=True)),
                ('means_of_id', models.CharField(blank=True, max_length=100, null=True)),
                ('id_photo', models.ImageField(blank=True, null=True, upload_to='user_ids')),
                ('staff_number', models.CharField(blank=True, max_length=10, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_eligible', models.BooleanField(default=True)),
                ('employ_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True)),
                ('acct_name', models.CharField(blank=True, max_length=200, null=True)),
                ('acct_number', models.PositiveIntegerField(default=0)),
                ('next_of_kin', models.CharField(blank=True, max_length=400, null=True)),
                ('nok_address', models.CharField(blank=True, max_length=400, null=True)),
                ('nok_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nok_rlship', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_category', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_categories', models.ManyToManyField(related_name='users', to='lumenapp.usercategory')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('location', models.CharField(max_length=400)),
                ('description', models.TextField(blank=True)),
                ('plot_no', models.CharField(max_length=200)),
                ('display_img', models.ImageField(blank=True, null=True, upload_to='project_images')),
                ('project_imgs', models.ImageField(blank=True, null=True, upload_to='project_images')),
                ('size', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tot_num_of_bedrooms', models.PositiveIntegerField()),
                ('tot_num_of_bathrooms', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('plot_features', models.CharField(max_length=200)),
                ('title_doc_type', models.CharField(max_length=200)),
                ('title_doc_file_num', models.CharField(max_length=200, null=True)),
                ('title_doc_date', models.DateField(null=True)),
                ('title_doc_vol', models.CharField(max_length=200)),
                ('title_doc_page', models.CharField(max_length=200)),
                ('title_doc_reg_num', models.CharField(max_length=200, null=True)),
                ('landowner', models.CharField(max_length=400)),
                ('landowner_address', models.CharField(max_length=400)),
                ('developers_share', models.CharField(max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prototype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prototype_name', models.CharField(max_length=800)),
                ('prototype_img', models.ImageField(blank=True, null=True, upload_to='prototype_images')),
                ('prototype_description', models.TextField()),
                ('prototype_size', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('prototype_price', models.DecimalField(decimal_places=2, max_digits=11)),
                ('num_of_bedrooms', models.PositiveIntegerField(default=0)),
                ('num_of_bathrooms', models.PositiveIntegerField(default=0)),
                ('num_of_kitchen', models.PositiveIntegerField(default=0)),
                ('num_of_parking_space', models.PositiveIntegerField(default=0)),
                ('legal_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('VAT_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('sewage_fee', models.DecimalField(decimal_places=2, max_digits=11)),
                ('water_fee', models.DecimalField(decimal_places=2, max_digits=11)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_prototypes', to='lumenapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_num', models.CharField(max_length=10)),
                ('subscri_price', models.DecimalField(decimal_places=2, max_digits=11)),
                ('is_available', models.BooleanField(default=True)),
                ('prototype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='lumenapp.prototype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='lumenapp.newuser')),
            ],
        ),
        migrations.AddField(
            model_name='newuser',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='lumenapp.usercategory'),
        ),
    ]
